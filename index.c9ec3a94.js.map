{"mappings":"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","sources":["node_modules/solid-js/dist/solid.js","node_modules/solid-js/web/dist/web.js","src/app/components/language.tsx","dist/dictionary.json","src/dictionary/unicode.ts","src/app/components/list.tsx","src/app/utilities/strings.ts","src/app/components/search.tsx","src/app/components/app.tsx","src/app/main.tsx"],"sourcesContent":["let taskIdCounter = 1,\n    isCallbackScheduled = false,\n    isPerformingWork = false,\n    taskQueue = [],\n    currentTask = null,\n    shouldYieldToHost = null,\n    yieldInterval = 5,\n    deadline = 0,\n    maxYieldInterval = 300,\n    scheduleCallback = null,\n    scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n        port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n      timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return { ...sharedConfig.context,\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}-`,\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst NOTPENDING = {};\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceFactory = null;\nlet Listener = null;\nlet Pending = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n        owner = Owner,\n        root = fn.length === 0 && !false ? UNOWNED : {\n    owned: null,\n    cleanups: null,\n    context: null,\n    owner: detachedOwner || owner\n  };\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(() => fn(() => cleanNode(root)), true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    pending: NOTPENDING,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.pending !== NOTPENDING ? s.pending : s.tValue);else value = value(s.pending !== NOTPENDING ? s.pending : s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n    fn ? fn() : untrack(onInvalidate);\n    fn = undefined;\n  }, undefined, false, 0),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.pending = NOTPENDING;\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction createResource(source, fetcher, options) {\n  if (arguments.length === 2) {\n    if (typeof fetcher === \"object\") {\n      options = fetcher;\n      fetcher = source;\n      source = true;\n    }\n  } else if (arguments.length === 1) {\n    fetcher = source;\n    source = true;\n  }\n  options || (options = {});\n  const contexts = new Set(),\n        [value, setValue] = createSignal(options.initialValue),\n        [track, trigger] = createSignal(undefined, {\n    equals: false\n  }),\n        [loading, setLoading] = createSignal(false),\n        [error, setError] = createSignal();\n  let err = undefined,\n      pr = null,\n      initP = null,\n      id = null,\n      loadedUnderTransition = false,\n      scheduled = false,\n      resolved = (\"initialValue\" in options),\n      dynamic = typeof source === \"function\" && createMemo(source);\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    if (sharedConfig.load) initP = sharedConfig.load(id);\n  }\n  function loadEnd(p, v, e, key) {\n    if (pr === p) {\n      pr = null;\n      resolved = true;\n      if (initP && (p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = null;\n      setError(err = e);\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          if (!Transition.promises.size) {\n            Effects.push.apply(Effects, Transition.effects);\n            Transition.effects = [];\n          }\n          completeLoad(v);\n        }, false);\n      } else completeLoad(v);\n    }\n    return v;\n  }\n  function completeLoad(v) {\n    batch(() => {\n      setValue(() => v);\n      setLoading(false);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    });\n  }\n  function read() {\n    const c = SuspenseContext && lookup(Owner, SuspenseContext.id),\n          v = value();\n    if (err) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching && scheduled) return;\n    scheduled = false;\n    setError(err = undefined);\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP || untrack(() => fetcher(lookup, {\n      value: value(),\n      refetching\n    }));\n    if (typeof p !== \"object\" || !(\"then\" in p)) {\n      loadEnd(pr, p);\n      return p;\n    }\n    pr = p;\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    batch(() => {\n      setLoading(true);\n      trigger();\n    });\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, e, e));\n  }\n  Object.defineProperties(read, {\n    loading: {\n      get() {\n        return loading();\n      }\n    },\n    error: {\n      get() {\n        return error();\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        if (err) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));else load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n      timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(node.value, options);\n  updateComputation(node);\n  setDeferred(() => node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const key of subs.keys()) if (fn(key, v) !== fn(key, p)) {\n      const l = subs.get(key);\n      for (const c of l.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE);\n  updateComputation(node);\n  return key => {\n    let listener;\n    if (listener = Listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  if (Pending) return fn();\n  let result;\n  const q = Pending = [];\n  try {\n    result = fn();\n  } finally {\n    Pending = null;\n  }\n  runUpdates(() => {\n    for (let i = 0; i < q.length; i += 1) {\n      const data = q[i];\n      if (data.pending !== NOTPENDING) {\n        const pending = data.pending;\n        data.pending = NOTPENDING;\n        writeSignal(data, pending);\n      }\n    }\n  }, false);\n  return result;\n}\nfunction untrack(fn) {\n  let result,\n      listener = Listener;\n  Listener = null;\n  result = fn();\n  Listener = listener;\n  return result;\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return undefined;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null) Owner.context = {\n    [ERROR]: [fn]\n  };else if (!Owner.context[ERROR]) Owner.context[ERROR] = [fn];else Owner.context[ERROR].push(fn);\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  Owner = o;\n  try {\n    return runUpdates(fn, true);\n  } finally {\n    Owner = prev;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    batch(fn);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let ctx;\n  return (ctx = lookup(Owner, context.id)) !== undefined ? ctx : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  return createMemo(() => resolveChildren(children()));\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext({}));\n}\nfunction enableExternalSource(factory) {\n  if (ExternalSourceFactory) {\n    const oldFactory = ExternalSourceFactory;\n    ExternalSourceFactory = (fn, trigger) => {\n      const oldSource = oldFactory(fn, trigger);\n      const source = factory(x => oldSource.track(x), trigger);\n      return {\n        track: x => source.track(x),\n        dispose() {\n          source.dispose();\n          oldSource.dispose();\n        }\n      };\n    };\n  } else {\n    ExternalSourceFactory = factory;\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (!runningTransition && this.state || runningTransition && this.tState)) {\n    const updates = Updates;\n    Updates = null;\n    !runningTransition && this.state === STALE || runningTransition && this.tState === STALE ? updateComputation(this) : lookUpstream(this);\n    Updates = updates;\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  if (Pending) {\n    if (node.pending === NOTPENDING) Pending.push(node);\n    node.pending = value;\n    return value;\n  }\n  if (node.comparator) {\n    if (Transition && Transition.running && Transition.sources.has(node)) {\n      if (node.comparator(node.tValue, value)) return value;\n    } else if (node.comparator(node.value, value)) return value;\n  }\n  let TransitionRunning = false;\n  if (Transition) {\n    TransitionRunning = Transition.running;\n    if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n      Transition.sources.add(node);\n      node.tValue = value;\n    }\n    if (!TransitionRunning) node.value = value;\n  } else node.value = value;\n  if (node.observers && node.observers.length) {\n    runUpdates(() => {\n      for (let i = 0; i < node.observers.length; i += 1) {\n        const o = node.observers[i];\n        if (TransitionRunning && Transition.disposed.has(o)) continue;\n        if (TransitionRunning && !o.tState || !TransitionRunning && !o.state) {\n          if (o.pure) Updates.push(o);else Effects.push(o);\n          if (o.observers) markDownstream(o);\n        }\n        if (TransitionRunning) o.tState = STALE;else o.state = STALE;\n      }\n      if (Updates.length > 10e5) {\n        Updates = [];\n        if (false) ;\n        throw new Error();\n      }\n    }, false);\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const owner = Owner,\n        listener = Listener,\n        time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        runComputation(node, node.tValue, time);\n      }, false);\n    });\n  }\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.observers && node.observers.length) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceFactory) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceFactory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceFactory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if (!runningTransition && node.state === 0 || runningTransition && node.tState === 0) return;\n  if (!runningTransition && node.state === PENDING || runningTransition && node.tState === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (!runningTransition && node.state || runningTransition && node.tState) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n          prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if (!runningTransition && node.state === STALE || runningTransition && node.tState === STALE) {\n      updateComputation(node);\n    } else if (!runningTransition && node.state === PENDING || runningTransition && node.tState === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      lookUpstream(node, ancestors[0]);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Updates = null;\n    if (!wait) Effects = null;\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition && Transition.running) {\n    if (Transition.promises.size || Transition.queue.size) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n    const sources = Transition.sources;\n    res = Transition.resolve;\n    Effects.forEach(e => {\n      \"tState\" in e && (e.state = e.tState);\n      delete e.tState;\n    });\n    Transition = null;\n    batch(() => {\n      sources.forEach(v => {\n        v.value = v.tValue;\n        if (v.owned) {\n          for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n        }\n        if (v.tOwned) v.owned = v.tOwned;\n        delete v.tValue;\n        delete v.tOwned;\n        v.tState = 0;\n      });\n      setTransPending(false);\n    });\n  }\n  if (Effects.length) batch(() => {\n    runEffects(Effects);\n    Effects = null;\n  });else {\n    Effects = null;\n  }\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n          if (!tasks.size) {\n            Effects.push.apply(Effects, Transition.effects);\n            Transition.effects = [];\n          }\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n      userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) setHydrateContext();\n  const resume = queue.length;\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n  for (i = resume; i < queue.length; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      if (!runningTransition && source.state === STALE || runningTransition && source.tState === STALE) {\n        if (source !== ignore) runTop(source);\n      } else if (!runningTransition && source.state === PENDING || runningTransition && source.tState === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (!runningTransition && !o.state || runningTransition && !o.tState) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n            index = node.sourceSlots.pop(),\n            obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n              s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = 0; i < node.tOwned.length; i++) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = 0; i < node.owned.length; i++) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = 0; i < node.cleanups.length; i++) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n  node.context = null;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction handleError(err) {\n  const fns = ERROR && lookup(Owner, ERROR);\n  if (!fns) throw err;\n  fns.forEach(f => f(err));\n}\nfunction lookup(owner, key) {\n  return owner ? owner.context && owner.context[key] !== undefined ? owner.context[key] : lookup(owner.owner, key) : undefined;\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id) {\n  return function provider(props) {\n    let res;\n    createComputed(() => res = untrack(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }));\n    return res;\n  };\n}\n\nfunction getSymbol() {\n  const SymbolCopy = Symbol;\n  return SymbolCopy.observable || \"@@observable\";\n}\nfunction observable(input) {\n  const $$observable = getSymbol();\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = \"next\" in observer ? observer.next.bind(observer) : observer;\n      let complete = false;\n      createComputed(() => {\n        if (complete) return;\n        const v = input();\n        untrack(() => handler(v));\n      });\n      return {\n        unsubscribe() {\n          complete = true;\n        }\n      };\n    },\n    [$$observable]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      len = 0,\n      indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n        i,\n        j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newLen = newItems.length,\n          newIndices,\n          newIndicesNext,\n          temp,\n          tempdisposers,\n          tempIndexes,\n          start,\n          end,\n          newEnd,\n          item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      signals = [],\n      len = 0,\n      i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [];\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newItems.length === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newItems.length; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newItems.length;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return (s = typeof s === \"function\" ? s() : s) == null ? {} : s;\n}\nfunction mergeProps(...sources) {\n  return new Proxy({\n    get(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        const v = resolveSource(sources[i])[property];\n        if (v !== undefined) return v;\n      }\n    },\n    has(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        if (property in resolveSource(sources[i])) return true;\n      }\n      return false;\n    },\n    keys() {\n      const keys = [];\n      for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n      return [...new Set(keys)];\n    }\n  }, propTraps);\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  const res = keys.map(k => {\n    const clone = {};\n    for (let i = 0; i < k.length; i++) {\n      const key = k[i];\n      Object.defineProperty(clone, key, descriptors[key] ? descriptors[key] : {\n        get() {\n          return props[key];\n        },\n        set() {\n          return true;\n        }\n      });\n    }\n    return clone;\n  });\n  res.push(new Proxy({\n    get(property) {\n      return blocked.has(property) ? undefined : props[property];\n    },\n    has(property) {\n      return blocked.has(property) ? false : property in props;\n    },\n    keys() {\n      return Object.keys(props).filter(k => !blocked.has(k));\n    }\n  }, propTraps));\n  return res;\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    } else {\n      const c = comp();\n      if (c) return c(props);\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) && untrack(() => {\n      if (!ctx) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }));\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? `${ctx.id}${ctx.count++}` : `cl-${counter++}`;\n}\n\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback ? fallback : undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback ? fallback : undefined));\n}\nfunction Show(props) {\n  let strictEqual = false;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => strictEqual ? a === b : !a === !b\n  });\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      return (strictEqual = typeof child === \"function\" && child.length > 0) ? untrack(() => child(c)) : child;\n    }\n    return props.fallback;\n  });\n}\nfunction Switch(props) {\n  let strictEqual = false;\n  const conditions = children(() => props.children),\n        evalConditions = createMemo(() => {\n    let conds = conditions();\n    if (!Array.isArray(conds)) conds = [conds];\n    for (let i = 0; i < conds.length; i++) {\n      const c = conds[i].when;\n      if (c) return [i, c, conds[i]];\n    }\n    return [-1];\n  }, undefined, {\n    equals: (a, b) => a[0] === b[0] && (strictEqual ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2]\n  });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    return (strictEqual = typeof c === \"function\" && c.length > 0) ? untrack(() => c(when)) : c;\n  });\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nconst NoErrors = {};\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn(NoErrors));\n}\nfunction ErrorBoundary(props) {\n  let err = NoErrors;\n  if (sharedConfig.context && sharedConfig.load) {\n    err = sharedConfig.load(sharedConfig.context.id + sharedConfig.context.count) || NoErrors;\n  }\n  const [errored, setErrored] = createSignal(err);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if ((e = errored()) !== NoErrors) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored(NoErrors))) : f;\n    }\n    onError(setErrored);\n    return props.children;\n  });\n}\n\nconst SuspenseListContext = createContext();\nfunction SuspenseList(props) {\n  let index = 0,\n      suspenseSetter,\n      showContent,\n      showFallback;\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) {\n    const [inFallback, setFallback] = createSignal(false);\n    suspenseSetter = setFallback;\n    [showContent, showFallback] = listContext.register(inFallback);\n  }\n  const registry = [],\n        comp = createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        const [showingContent, showContent] = createSignal(false),\n              [showingFallback, showFallback] = createSignal(false);\n        registry[index++] = {\n          inFallback,\n          showContent,\n          showFallback\n        };\n        return [showingContent, showingFallback];\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n  createComputed(() => {\n    const reveal = props.revealOrder,\n          tail = props.tail,\n          visibleContent = showContent ? showContent() : true,\n          visibleFallback = showFallback ? showFallback() : true,\n          reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = registry.every(i => !i.inFallback());\n      suspenseSetter && suspenseSetter(!all);\n      registry.forEach(i => {\n        i.showContent(all && visibleContent);\n        i.showFallback(visibleFallback);\n      });\n      return;\n    }\n    let stop = false;\n    for (let i = 0, len = registry.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n            s = registry[n].inFallback();\n      if (!stop && !s) {\n        registry[n].showContent(visibleContent);\n        registry[n].showFallback(visibleFallback);\n      } else {\n        const next = !stop;\n        if (next && suspenseSetter) suspenseSetter(true);\n        if (!tail || next && tail === \"collapsed\") {\n          registry[n].showFallback(visibleFallback);\n        } else registry[n].showFallback(false);\n        stop = true;\n        registry[n].showContent(next);\n      }\n    }\n    if (!stop && suspenseSetter) suspenseSetter(false);\n  });\n  return comp;\n}\nfunction Suspense(props) {\n  let counter = 0,\n      showContent,\n      showFallback,\n      ctx,\n      p,\n      flicker,\n      error;\n  const [inFallback, setFallback] = createSignal(false),\n        SuspenseContext = getSuspenseContext(),\n        store = {\n    increment: () => {\n      if (++counter === 1) setFallback(true);\n    },\n    decrement: () => {\n      if (--counter === 0) setFallback(false);\n    },\n    inFallback,\n    effects: [],\n    resolved: false\n  },\n        owner = getOwner();\n  if (sharedConfig.context) {\n    const key = sharedConfig.context.id + sharedConfig.context.count;\n    p = sharedConfig.load(key);\n    if (p) {\n      if (typeof p !== \"object\" || !(\"then\" in p)) p = Promise.resolve(p);\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(err => {\n        if ((error = err) || sharedConfig.done) return set();\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      });\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) [showContent, showFallback] = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === undefined) setHydrateContext();\n        const rendered = untrack(() => props.children);\n        return createMemo(() => {\n          const inFallback = store.inFallback(),\n                visibleContent = showContent ? showContent() : true,\n                visibleFallback = showFallback ? showFallback() : true;\n          dispose && dispose();\n          if ((!inFallback || p !== undefined) && visibleContent) {\n            store.resolved = true;\n            ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered;\n          }\n          if (!visibleFallback) return;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"f\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nlet DEV;\n\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\n","import { createMemo, createRoot, createRenderEffect, sharedConfig, enableHydration, createSignal, onCleanup, splitProps, untrack } from 'solid-js';\nexport { ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, createComponent, createRenderEffect as effect, getOwner, mergeProps } from 'solid-js';\n\nconst booleans = [\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\"];\nconst Properties = new Set([\"className\", \"value\", \"readOnly\", \"formNoValidate\", \"isMap\", \"noModule\", \"playsInline\", ...booleans]);\nconst ChildProperties = new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = {\n  className: \"class\",\n  htmlFor: \"for\"\n};\nconst PropAliases = {\n  class: \"className\",\n  formnovalidate: \"formNoValidate\",\n  ismap: \"isMap\",\n  nomodule: \"noModule\",\n  playsinline: \"playsInline\",\n  readonly: \"readOnly\"\n};\nconst DelegatedEvents = new Set([\"beforeinput\", \"click\", \"dblclick\", \"contextmenu\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = new Set([\n\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"hkern\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\",\n\"set\", \"stop\",\n\"svg\", \"switch\", \"symbol\", \"text\", \"textPath\",\n\"tref\", \"tspan\", \"use\", \"view\", \"vkern\"]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst DOMElements = new Set([\"html\", \"base\", \"head\", \"link\", \"meta\", \"style\", \"title\", \"body\", \"address\", \"article\", \"aside\", \"footer\", \"header\", \"main\", \"nav\", \"section\", \"body\", \"blockquote\", \"dd\", \"div\", \"dl\", \"dt\", \"figcaption\", \"figure\", \"hr\", \"li\", \"ol\", \"p\", \"pre\", \"ul\", \"a\", \"abbr\", \"b\", \"bdi\", \"bdo\", \"br\", \"cite\", \"code\", \"data\", \"dfn\", \"em\", \"i\", \"kbd\", \"mark\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"small\", \"span\", \"strong\", \"sub\", \"sup\", \"time\", \"u\", \"var\", \"wbr\", \"area\", \"audio\", \"img\", \"map\", \"track\", \"video\", \"embed\", \"iframe\", \"object\", \"param\", \"picture\", \"portal\", \"source\", \"svg\", \"math\", \"canvas\", \"noscript\", \"script\", \"del\", \"ins\", \"caption\", \"col\", \"colgroup\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\", \"button\", \"datalist\", \"fieldset\", \"form\", \"input\", \"label\", \"legend\", \"meter\", \"optgroup\", \"option\", \"output\", \"progress\", \"select\", \"textarea\", \"details\", \"dialog\", \"menu\", \"summary\", \"details\", \"slot\", \"template\", \"acronym\", \"applet\", \"basefont\", \"bgsound\", \"big\", \"blink\", \"center\", \"content\", \"dir\", \"font\", \"frame\", \"frameset\", \"hgroup\", \"image\", \"keygen\", \"marquee\", \"menuitem\", \"nobr\", \"noembed\", \"noframes\", \"plaintext\", \"rb\", \"rtc\", \"shadow\", \"spacer\", \"strike\", \"tt\", \"xmp\", \"a\", \"abbr\", \"acronym\", \"address\", \"applet\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"basefont\", \"bdi\", \"bdo\", \"bgsound\", \"big\", \"blink\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"center\", \"cite\", \"code\", \"col\", \"colgroup\", \"content\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"dir\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"font\", \"footer\", \"form\", \"frame\", \"frameset\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"image\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"marquee\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"nobr\", \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"plaintext\", \"portal\", \"pre\", \"progress\", \"q\", \"rb\", \"rp\", \"rt\", \"rtc\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"shadow\", \"slot\", \"small\", \"source\", \"spacer\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"tt\", \"u\", \"ul\", \"var\", \"video\", \"wbr\", \"xmp\", \"input\"]);\n\nfunction memo(fn, equals) {\n  return createMemo(fn, undefined, !equals ? {\n    equals\n  } : undefined);\n}\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n      aEnd = a.length,\n      bEnd = bLength,\n      aStart = 0,\n      bStart = 0,\n      after = a[aEnd - 1].nextSibling,\n      map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) a[aStart].remove();\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n              sequence = 1,\n              t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else a[aStart++].remove();\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    element === document ? code() : insert(element, code(), element.firstChild ? null : undefined, init);\n  });\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, check, isSVG) {\n  const t = document.createElement(\"template\");\n  t.innerHTML = html;\n  let node = t.content.firstChild;\n  if (isSVG) node = node.firstChild;\n  return node;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setAttribute(node, name, value) {\n  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);\n}\nfunction className(node, value) {\n  if (value == null) node.removeAttribute(\"class\");else node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    node.addEventListener(name, e => handler[0](handler[1], e));\n  } else node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n        prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n          classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev = {}) {\n  const nodeStyle = node.style;\n  const prevString = typeof prev === \"string\";\n  if (value == null && prevString || typeof value === \"string\") return nodeStyle.cssText = value;\n  prevString && (nodeStyle.cssText = undefined, prev = {});\n  value || (value = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, accessor, isSVG, skipChildren) {\n  if (typeof accessor === \"function\") {\n    createRenderEffect(current => spreadExpression(node, accessor(), current, isSVG, skipChildren));\n  } else spreadExpression(node, accessor, undefined, isSVG, skipChildren);\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction innerHTML(parent, content) {\n  !sharedConfig.context && (parent.innerHTML = content);\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\") continue;\n      assignProp(node, prop, null, prevProps[prop], isSVG, skipRef);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef);\n  }\n}\nfunction hydrate$1(code, element, options = {}) {\n  sharedConfig.completed = globalThis._$HY.completed;\n  sharedConfig.events = globalThis._$HY.events;\n  sharedConfig.load = globalThis._$HY.load;\n  sharedConfig.gather = root => gatherHydratable(element, root);\n  sharedConfig.registry = new Map();\n  sharedConfig.context = {\n    id: options.renderId || \"\",\n    count: 0\n  };\n  gatherHydratable(element, options.renderId);\n  const dispose = render(code, element, [...element.childNodes]);\n  sharedConfig.context = null;\n  return dispose;\n}\nfunction getNextElement(template) {\n  let node, key;\n  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template.cloneNode(true);\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n      count = 0,\n      current = [];\n  if (sharedConfig.context) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"#\") count++;else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const {\n        completed,\n        events\n      } = sharedConfig;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        eventHandler(e);\n        events.shift();\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++) node.classList.toggle(classNames[i], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef) {\n  let isCE, isProp, isChildProp;\n  if (prop === \"style\") return style(node, value, prev);\n  if (prop === \"classList\") return classList(node, value, prev);\n  if (value === prev) return prev;\n  if (prop === \"ref\") {\n    if (!skipRef) {\n      value(node);\n    }\n  } else if (prop.slice(0, 3) === \"on:\") {\n    node.addEventListener(prop.slice(3), value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    node.addEventListener(prop.slice(10), value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    addEventListener(node, name, value, delegate);\n    delegate && delegateEvents([name]);\n  } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (PropAliases[prop] || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes(\"-\"))) {\n    if (prop === \"class\" || prop === \"className\") className(node, value);else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[PropAliases[prop] || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e) {\n  const key = `$$${e.type}`;\n  let node = e.composedPath && e.composedPath()[0] || e.target;\n  if (e.target !== node) {\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) {\n    sharedConfig.done = true;\n    document.querySelectorAll(\"[id^=pl-]\").forEach(elem => elem.remove());\n  }\n  while (node !== null) {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler(data, e) : handler(e);\n      if (e.cancelBubble) return;\n    }\n    node = node.host && node.host !== node && node.host instanceof Node ? node.host : node.parentNode;\n  }\n}\nfunction spreadExpression(node, props, prevProps = {}, isSVG, skipChildren) {\n  props || (props = {});\n  if (!skipChildren && \"children\" in props) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  props.ref && props.ref(node);\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  if (sharedConfig.context && !current) current = [...parent.childNodes];\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n        multi = marker !== undefined;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (sharedConfig.context) return current;\n    if (t === \"number\") value = value.toString();\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data = value;\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (sharedConfig.context) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    if (normalizeIncomingArray(array, value, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (sharedConfig.context) {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].parentNode) return current = array;\n      }\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else if (Array.isArray(current)) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value instanceof Node) {\n    if (sharedConfig.context && value.parentNode) return current = multi ? [value] : value;\n    if (Array.isArray(current)) {\n      if (multi) return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else ;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n        t;\n    if (item instanceof Node) {\n      normalized.push(item);\n    } else if (item == null || item === true || item === false) ; else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item) || dynamic;\n    } else if ((t = typeof item) === \"string\") {\n      normalized.push(document.createTextNode(item));\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else normalized.push(document.createTextNode(item.toString()));\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && el.remove();\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction gatherHydratable(element, root) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    const key = node.getAttribute(\"data-hk\");\n    if ((!root || key.startsWith(root)) && !sharedConfig.registry.has(key)) sharedConfig.registry.set(key, node);\n  }\n}\nfunction getHydrationKey() {\n  const hydrate = sharedConfig.context;\n  return `${hydrate.id}${hydrate.count++}`;\n}\nfunction Assets() {\n  return;\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\n\nfunction throwInBrowser(func) {\n  const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n  console.error(err);\n}\nfunction renderToString(fn, options) {\n  throwInBrowser(renderToString);\n}\nfunction renderToStringAsync(fn, options) {\n  throwInBrowser(renderToStringAsync);\n}\nfunction renderToStream(fn, options) {\n  throwInBrowser(renderToStream);\n}\nfunction ssr(template, ...nodes) {}\nfunction resolveSSRNode(node) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrSpread(accessor) {}\nfunction ssrBoolean(key, value) {}\nfunction ssrHydrationKey() {}\nfunction escape(html) {}\nfunction generateHydrationScript() {}\n\nconst isServer = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nconst hydrate = (...args) => {\n  enableHydration();\n  return hydrate$1(...args);\n};\nfunction Portal(props) {\n  const {\n    useShadow\n  } = props,\n        marker = document.createTextNode(\"\"),\n        mount = props.mount || document.body;\n  function renderPortal() {\n    if (sharedConfig.context) {\n      const [s, set] = createSignal(false);\n      queueMicrotask(() => set(true));\n      return () => s() && props.children;\n    } else return () => props.children;\n  }\n  if (mount instanceof HTMLHeadElement) {\n    const [clean, setClean] = createSignal(false);\n    const cleanup = () => setClean(true);\n    createRoot(dispose => insert(mount, () => !clean() ? renderPortal()() : dispose(), null));\n    onCleanup(() => {\n      if (sharedConfig.context) queueMicrotask(cleanup);else cleanup();\n    });\n  } else {\n    const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n          renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n      mode: \"open\"\n    }) : container;\n    Object.defineProperty(container, \"host\", {\n      get() {\n        return marker.parentNode;\n      }\n    });\n    insert(renderRoot, renderPortal());\n    mount.appendChild(container);\n    props.ref && props.ref(container);\n    onCleanup(() => mount.removeChild(container));\n  }\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p, others] = splitProps(props, [\"component\"]);\n  return createMemo(() => {\n    const component = p.component;\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\n\nexport { Aliases, Assets, ChildProperties, DOMElements, DelegatedEvents, Dynamic, Assets as HydrationScript, NoHydration, Portal, PropAliases, Properties, SVGElements, SVGNamespace, addEventListener, assign, classList, className, clearDelegatedEvents, delegateEvents, dynamicProperty, escape, generateHydrationScript, getHydrationKey, getNextElement, getNextMarker, getNextMatch, hydrate, innerHTML, insert, isServer, memo, render, renderToStream, renderToString, renderToStringAsync, resolveSSRNode, runHydrationEvents, setAttribute, setAttributeNS, spread, ssr, ssrBoolean, ssrClassList, ssrHydrationKey, ssrSpread, ssrStyle, style, template };\n","import { Component } from \"solid-js\";\nimport { Language } from \"../../schemas/languages\";\n\ninterface Props {\n  selected: Language;\n  setLanguage: (lang: Language) => void;\n}\n\nconst LanguageSelector: Component<Props> = (props) => {\n  return (\n    <select\n      onChange={(ev) =>\n        props.setLanguage((ev.target as HTMLSelectElement).value as Language)\n      }\n    >\n      <option value=\"sl\" selected>\n        sl\n      </option>\n    </select>\n  );\n};\n\nexport default LanguageSelector;\n","[\n  {\n    \"value\": \"acrobatics\",\n    \"normalized\": \"acrobatics\",\n    \"description\": \"Your Dexterity (Acrobatics) check covers your attempt to stay on your feet in a tricky situation, such as when you're trying to run across a sheet of ice, balance on a tightrope, or stay upright on a rocking ship's deck. The GM might also call for a Dexterity (Acrobatics) check to see if you can perform acrobatic stunts, including dives, rolls, somersaults, and flips.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"okretnost\",\n        \"alternatives\": [\n          \"gibčnost\",\n          \"prožnost\",\n          \"urnost\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"action\",\n    \"normalized\": \"action\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"dejanje\"\n      }\n    ]\n  },\n  {\n    \"value\": \"animal handling\",\n    \"normalized\": \"animal handling\",\n    \"description\": \"When there is any question whether you can calm down a domesticated animal, keep a mount from getting spooked, or intuit an animal’s intentions, the GM might call for a Wisdom (Animal Handling) check. You also make a Wisdom (Animal Handling) check to control your mount when you attempt a risky maneuver.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"rokovanje z živalmi\"\n      }\n    ]\n  },\n  {\n    \"value\": \"arcana\",\n    \"normalized\": \"arcana\",\n    \"description\": \"Your Intelligence (Arcana) check measures your ability to recall lore about spells, magic items, eldritch symbols, magical traditions, the planes of existence, and the inhabitants of those planes.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"arkana\"\n      }\n    ]\n  },\n  {\n    \"value\": \"armor\",\n    \"normalized\": \"armor\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"oklep\"\n      }\n    ]\n  },\n  {\n    \"value\": \"armor class\",\n    \"normalized\": \"armor class\",\n    \"description\": \"Your Armor Class (AC) represents how well your character avoids being wounded in battle. Things that contribute to your AC include the armor you wear, the shield you carry, and your Dexterity modifier. Not all characters wear armor or carry shields, however. Without armor or a shield, your character’s AC equals 10 + his or her Dexterity modifier. If your character wears armor, carries a shield, or both, calculate your AC using the rules in the Equipment section. Record your AC on your character sheet.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"red oklepa\"\n      }\n    ]\n  },\n  {\n    \"value\": \"athletics\",\n    \"normalized\": \"athletics\",\n    \"description\": \"Your Strength (Athletics) check covers difficult situations you encounter while climbing, jumping, or swimming.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"atletika\"\n      }\n    ]\n  },\n  {\n    \"value\": \"attack\",\n    \"normalized\": \"attack\",\n    \"description\": \"The most common action to take in combat is the Attack action, whether you are swinging a sword, firing an arrow from a bow, or brawling with your fists.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"napadati\"\n      }\n    ]\n  },\n  {\n    \"value\": \"blinded\",\n    \"normalized\": \"blinded\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"zaslepljen\",\n        \"alternatives\": [\n          \"slep\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"bonus\",\n    \"normalized\": \"bonus\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"dodatek\",\n        \"alternatives\": [\n          \"bonus\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"cast a spell\",\n    \"normalized\": \"cast a spell\",\n    \"description\": \"Spellcasters such as wizards and clerics, as well as many monsters, have access to spells and can use them to great effect in combat. Each spell has a casting time, which specifies whether the caster must use an action, a reaction, minutes, or even hours to cast the spell. Casting a spell is, therefore, not necessarily an action. Most spells do have a casting time of 1 action, so a spellcaster often uses his or her action in combat to cast such a spell.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"uporabiti urok\"\n      }\n    ]\n  },\n  {\n    \"value\": \"charisma\",\n    \"normalized\": \"charisma\",\n    \"description\": \"Charisma measures your ability to interact effectively with others. It includes such factors as confidence and eloquence, and it can represent a charming or commanding personality.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"karizma\"\n      }\n    ]\n  },\n  {\n    \"value\": \"charmed\",\n    \"normalized\": \"charmed\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"očaran\"\n      }\n    ]\n  },\n  {\n    \"value\": \"check\",\n    \"normalized\": \"check\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"poskus\"\n      }\n    ]\n  },\n  {\n    \"value\": \"combat\",\n    \"normalized\": \"combat\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"boj\",\n        \"alternatives\": [\n          \"spopad\",\n          \"obračun\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"condition\",\n    \"normalized\": \"condition\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"stanje\"\n      }\n    ]\n  },\n  {\n    \"value\": \"constitution\",\n    \"normalized\": \"constitution\",\n    \"description\": \"Constitution measures health, stamina, and vital force.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"fizično stanje\",\n        \"alternatives\": [\n          \"konstitucija\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"dash\",\n    \"normalized\": \"dash\",\n    \"description\": \"When you take the Dash action, you gain extra movement for the current turn. The increase equals your speed, after applying any modifiers. With a speed of 30 feet, for example, you can move up to 60 feet on your turn if you dash.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"šprintati\",\n        \"alternatives\": [\n          \"teči na vso moč\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"deafened\",\n    \"normalized\": \"deafened\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"oglušen\",\n        \"alternatives\": [\n          \"gluh\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"deception\",\n    \"normalized\": \"deception\",\n    \"description\": \"Your Charisma (Deception) check determines whether you can convincingly hide the truth, either verbally or through your actions. This deception can encompass everything from misleading others through ambiguity to telling outright lies. Typical situations include trying to fast-talk a guard, con a merchant, earn money through gambling, pass yourself off in a disguise, dull someone's suspicions with false assurances, or maintain a straight face while telling a blatant lie.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"pretveza\",\n        \"alternatives\": [\n          \"goljufanje\",\n          \"sleparija\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"dexterity\",\n    \"normalized\": \"dexterity\",\n    \"description\": \"Dexterity measures agility, reflexes, and balance.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"spretnost\"\n      }\n    ]\n  },\n  {\n    \"value\": \"dice\",\n    \"normalized\": \"dice\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"kocke\"\n      }\n    ]\n  },\n  {\n    \"value\": \"die\",\n    \"normalized\": \"die\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"kocka\"\n      }\n    ]\n  },\n  {\n    \"value\": \"disengage\",\n    \"normalized\": \"disengage\",\n    \"description\": \"If you take the Disengage action, your movement doesn't provoke opportunity attacks for the rest of the turn.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"odmikati\",\n        \"alternatives\": [\n          \"izmikati\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"dodge\",\n    \"normalized\": \"dodge\",\n    \"description\": \"When you take the Dodge action, you focus entirely on avoiding attacks. Until the start of your next turn, any attack roll made against you has disadvantage if you can see the attacker, and you make Dexterity saving throws with advantage. You lose this benefit if you are incapacitated or if your speed drops to 0.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"umikati\",\n        \"alternatives\": [\n          \"izogibati\",\n          \"ogniti\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"exhaustion\",\n    \"normalized\": \"exhaustion\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"izčrpanost\",\n        \"alternatives\": [\n          \"utrujenost\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"feat\",\n    \"normalized\": \"feat\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"podvig\"\n      }\n    ]\n  },\n  {\n    \"value\": \"frightened\",\n    \"normalized\": \"frightened\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"prestrašen\"\n      }\n    ]\n  },\n  {\n    \"value\": \"grapple\",\n    \"normalized\": \"grapple\",\n    \"description\": \"When you want to grab a creature or wrestle with it, you can use the Attack action to make a special melee attack, a grapple. If you're able to make multiple attacks with the Attack action, this attack replaces one of them.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"ujeti\",\n        \"alternatives\": [\n          \"uloviti\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"grappled\",\n    \"normalized\": \"grappled\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"ujet\"\n      }\n    ]\n  },\n  {\n    \"value\": \"help\",\n    \"normalized\": \"help\",\n    \"description\": \"You can lend your aid to another creature in the completion of a task. When you take the Help action, the creature you aid gains advantage on the next ability check it makes to perform the task you are helping with, provided that it makes the check before the start of your next turn.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"pomagati\"\n      }\n    ]\n  },\n  {\n    \"value\": \"hide\",\n    \"normalized\": \"hide\",\n    \"description\": \"When you take the Hide action, you make a Dexterity (Stealth) check in an attempt to hide, following the rules for hiding. If you succeed, you gain certain benefits, as described in the \\\"Unseen Attackers and Targets\\\" section later in this chapter.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"skriti se\"\n      }\n    ]\n  },\n  {\n    \"value\": \"history\",\n    \"normalized\": \"history\",\n    \"description\": \"Your Intelligence (History) check measures your ability to recall lore about historical events, legendary people, ancient kingdoms, past disputes, recent wars, and lost civilizations.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"zgodovina\",\n        \"alternatives\": [\n          \"preteklost\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"hit points\",\n    \"normalized\": \"hit points\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"točke odpornosti\",\n        \"alternatives\": [\n          \"točke zdravja\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"immunity\",\n    \"normalized\": \"immunity\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"neranljivost\",\n        \"alternatives\": [\n          \"nedotakljivost\",\n          \"imunost\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"improvise\",\n    \"normalized\": \"improvise\",\n    \"description\": \"Your character can do things not covered by the actions in this chapter, such as breaking down doors, intimidating enemies, sensing weaknesses in magical defenses, or calling for a parley with a foe. The only limits to the actions you can attempt are your imagination and your character's ability scores. See the descriptions of the ability scores in chapter 7 for inspiration as you improvise.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"improvizirati\",\n        \"alternatives\": [\n          \"prilagoditi\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"incapacitated\",\n    \"normalized\": \"incapacitated\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"onemogočen\",\n        \"alternatives\": [\n          \"onesposobljen\",\n          \"izključen\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"initiative\",\n    \"normalized\": \"initiative\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"pobuda\"\n      }\n    ]\n  },\n  {\n    \"value\": \"insight\",\n    \"normalized\": \"insight\",\n    \"description\": \"Your Wisdom (Insight) check decides whether you can determine the true intentions of a creature, such as when searching out a lie or predicting someone’s next move. Doing so involves gleaning clues from body language, speech habits, and changes in mannerisms.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"vpogled\",\n        \"alternatives\": [\n          \"uvid\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"inspiration\",\n    \"normalized\": \"inspiration\",\n    \"description\": \"Inspiration is a rule the game master can use to reward you for playing your character in a way that’s true to his or her personality traits, ideal, bond, and flaw. By using inspiration, you can draw on your personality trait of compassion for the downtrodden to give you an edge in negotiating with the Beggar Prince. Or inspiration can let you call on your bond to the defense of your home village to push past the effect of a spell that has been laid on you.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"navdih\",\n        \"alternatives\": [\n          \"inspiracija\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"intelligence\",\n    \"normalized\": \"intelligence\",\n    \"description\": \"Intelligence measures mental acuity, accuracy of recall, and the ability to reason.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"pamet\"\n      }\n    ]\n  },\n  {\n    \"value\": \"intimidation\",\n    \"normalized\": \"intimidation\",\n    \"description\": \"When you attempt to influence someone through overt threats, hostile actions, and physical violence, the GM might ask you to make a Charisma (Intimidation) check. Examples include trying to pry information out of a prisoner, convincing street thugs to back down from a confrontation, or using the edge of a broken bottle to convince a sneering vizier to reconsider a decision.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"ustrahovanje\",\n        \"alternatives\": [\n          \"zastraševanje\",\n          \"grozenje\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"inventory\",\n    \"normalized\": \"inventory\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"oprema\",\n        \"alternatives\": [\n          \"zaloga\",\n          \"inventar\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"investigation\",\n    \"normalized\": \"investigation\",\n    \"description\": \"When you look around for clues and make deductions based on those clues, you make an Intelligence (Investigation) check. You might deduce the location of a hidden object, discern from the appearance of a wound what kind of weapon dealt it, or determine the weakest point in a tunnel that could cause it to collapse. Poring through ancient scrolls in search of a hidden fragment of knowledge might also call for an Intelligence (Investigation) check.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"preiskovanje\",\n        \"alternatives\": [\n          \"raziskovanje\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"invisible\",\n    \"normalized\": \"invisible\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"neviden\"\n      }\n    ]\n  },\n  {\n    \"value\": \"language\",\n    \"normalized\": \"language\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"jezik\"\n      }\n    ]\n  },\n  {\n    \"value\": \"long rest\",\n    \"normalized\": \"long rest\",\n    \"description\": \"A long rest is a period of extended downtime, at least 8 hours long, during which a character sleeps for at least 6 hours and performs no more than 2 hours of light activity, such as reading, talking, eating, or standing watch.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"dolg počitek\",\n        \"alternatives\": [\n          \"dolg odmor\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"medicine\",\n    \"normalized\": \"medicine\",\n    \"description\": \"A Wisdom (Medicine) check lets you try to stabilize a dying companion or diagnose an illness.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"zdravljenje\"\n      }\n    ]\n  },\n  {\n    \"value\": \"nature\",\n    \"normalized\": \"nature\",\n    \"description\": \"Your Intelligence (Nature) check measures your ability to recall lore about terrain, plants and animals, the weather, and natural cycles.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"naravoslovje\",\n        \"alternatives\": [\n          \"prirodoslovje\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"paralyzed\",\n    \"normalized\": \"paralyzed\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"ohromljen\",\n        \"alternatives\": [\n          \"paraliziran\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"passive\",\n    \"normalized\": \"passive\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"nedejaven\",\n        \"alternatives\": [\n          \"pasiven\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"passive check\",\n    \"normalized\": \"passive check\",\n    \"description\": \"A passive check is a special kind of ability check that doesn't involve any die rolls. Such a check can represent the average result for a task done repeatedly, such as searching for secret doors over and over again, or can be used when the DM wants to secretly determine whether the characters succeed at something without rolling dice, such as noticing a hidden monster.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"nedejaven poskus\",\n        \"alternatives\": [\n          \"pasiven poskus\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"perception\",\n    \"normalized\": \"perception\",\n    \"description\": \"Your Wisdom (Perception) check lets you spot, hear, or otherwise detect the presence of something. It measures your general awareness of your surroundings and the keenness of your senses. For example, you might try to hear a conversation through a closed door, eavesdrop under an open window, or hear monsters moving stealthily in the forest. Or you might try to spot things that are obscured or easy to miss, whether they are orcs lying in ambush on a road, thugs hiding in the shadows of an alley, or candlelight under a closed secret door.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"zaznavanje\",\n        \"alternatives\": [\n          \"razumevanje\",\n          \"doumevanje\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"performance\",\n    \"normalized\": \"performance\",\n    \"description\": \"Your Charisma (Performance) check determines how well you can delight an audience with music, dance, acting, storytelling, or some other form of entertainment.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"nastopanje\"\n      }\n    ]\n  },\n  {\n    \"value\": \"persuasion\",\n    \"normalized\": \"persuasion\",\n    \"description\": \"When you attempt to influence someone or a group of people with tact, social graces, or good nature, the GM might ask you to make a Charisma (Persuasion) check. Typically, you use persuasion when acting in good faith, to foster friendships, make cordial requests, or exhibit proper etiquette. Examples of persuading others include convincing a chamberlain to let your party see the king, negotiating peace between warring tribes, or inspiring a crowd of townsfolk.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"prepričevanje\",\n        \"alternatives\": [\n          \"prigovarjanje\",\n          \"nagovarjanje\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"petrified\",\n    \"normalized\": \"petrified\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"okamenjen\"\n      }\n    ]\n  },\n  {\n    \"value\": \"poisoned\",\n    \"normalized\": \"poisoned\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"zastrupljen\"\n      }\n    ]\n  },\n  {\n    \"value\": \"proficiency\",\n    \"normalized\": \"proficiency\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"izurjenost\",\n        \"alternatives\": [\n          \"strokovnost\",\n          \"zanesljivost\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"proficiency bonus\",\n    \"normalized\": \"proficiency bonus\",\n    \"description\": \"Characters have a proficiency bonus determined by level, as detailed in chapter 1. Monsters also have this bonus, which is incorporated in their stat blocks. The bonus is used in the rules on ability checks, saving throws, and attack rolls.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"dodatek za izurjenost\",\n        \"alternatives\": [\n          \"dodatek za strokovnost\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"prone\",\n    \"normalized\": \"prone\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"ležeč\"\n      }\n    ]\n  },\n  {\n    \"value\": \"ready\",\n    \"normalized\": \"ready\",\n    \"description\": \"Sometimes you want to get the jump on a foe or wait for a particular circumstance before you act. To do so, you can take the Ready action on your turn, which lets you act using your reaction before the start of your next turn.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"pripraviti se\"\n      }\n    ]\n  },\n  {\n    \"value\": \"religion\",\n    \"normalized\": \"religion\",\n    \"description\": \"Your Intelligence (Religion) check measures your ability to recall lore about deities, rites and prayers, religious hierarchies, holy symbols, and the practices of secret cults.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"vera\",\n        \"alternatives\": [\n          \"religija\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"resistance\",\n    \"normalized\": \"resistance\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"odpornost\"\n      }\n    ]\n  },\n  {\n    \"value\": \"restrained\",\n    \"normalized\": \"restrained\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"pridržan\"\n      }\n    ]\n  },\n  {\n    \"value\": \"save\",\n    \"normalized\": \"save\",\n    \"description\": \"A saving throw — also called a save — represents an attempt to resist a spell, a trap, a poison, a disease, or a similar threat. You don’t normally decide to make a saving throw; you are forced to make one because your character or monster is at risk of harm.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"izogib\"\n      }\n    ]\n  },\n  {\n    \"value\": \"saving throw\",\n    \"normalized\": \"saving throw\",\n    \"description\": \"A saving throw — also called a save — represents an attempt to resist a spell, a trap, a poison, a disease, or a similar threat. You don’t normally decide to make a saving throw; you are forced to make one because your character or monster is at risk of harm.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"izogib\"\n      }\n    ]\n  },\n  {\n    \"value\": \"search\",\n    \"normalized\": \"search\",\n    \"description\": \"When you take the Search action, you devote your attention to finding something. Depending on the nature of your search, the GM might have you make a Wisdom (Perception) check or an Intelligence (Investigation) check.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"iskati\"\n      }\n    ]\n  },\n  {\n    \"value\": \"short rest\",\n    \"normalized\": \"short rest\",\n    \"description\": \"A short rest is a period of downtime, at least 1 hour long, during which a character does nothing more strenuous than eating, drinking, reading, and tending to wounds.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"kratek počitek\",\n        \"alternatives\": [\n          \"premor\",\n          \"kratek odmor\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"shove\",\n    \"normalized\": \"shove\",\n    \"description\": \"Using the Attack action, you can make a special melee attack to shove a creature, either to knock it prone or push it away from you. If you're able to make multiple attacks with the Attack action, this attack replaces one of them.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"odriniti\",\n        \"alternatives\": [\n          \"poriniti\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"skill\",\n    \"normalized\": \"skill\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"veščina\",\n        \"alternatives\": [\n          \"znanje\",\n          \"veda\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"skills\",\n    \"normalized\": \"skills\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"veščine\",\n        \"alternatives\": [\n          \"znanja\",\n          \"vede\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"sleight of hand\",\n    \"normalized\": \"sleight of hand\",\n    \"description\": \"Whenever you attempt an act of legerdemain or manual trickery, such as planting something on someone else or concealing an object on your person, make a Dexterity (Sleight of Hand) check. The GM might also call for a Dexterity (Sleight of Hand) check to determine whether you can lift a coin purse off another person or slip something out of another person's pocket.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"rokovnjaštvo\"\n      }\n    ]\n  },\n  {\n    \"value\": \"stealth\",\n    \"normalized\": \"stealth\",\n    \"description\": \"Make a Dexterity (Stealth) check when you attempt to conceal yourself from enemies, slink past guards, slip away without being noticed, or sneak up on someone without being seen or heard.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"skrivanje\",\n        \"alternatives\": [\n          \"prikrivanje\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"strength\",\n    \"normalized\": \"strength\",\n    \"description\": \"Strength measures bodily power, athletic training, and the extent to which you can exert raw physical force.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"moč\"\n      }\n    ]\n  },\n  {\n    \"value\": \"stunned\",\n    \"normalized\": \"stunned\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"pretresen\"\n      }\n    ]\n  },\n  {\n    \"value\": \"survival\",\n    \"normalized\": \"survival\",\n    \"description\": \"The GM might ask you to make a Wisdom (Survival) check to follow tracks, hunt wild game, guide your group through frozen wastelands, identify signs that owlbears live nearby, predict the weather, or avoid quicksand and other natural hazards.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"preživetje\"\n      }\n    ]\n  },\n  {\n    \"value\": \"tool\",\n    \"normalized\": \"tool\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"orodje\"\n      }\n    ]\n  },\n  {\n    \"value\": \"unconscious\",\n    \"normalized\": \"unconscious\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"nezavesten\",\n        \"alternatives\": [\n          \"nezaveden\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"use an object\",\n    \"normalized\": \"use an object\",\n    \"description\": \"You normally interact with an object while doing something else, such as when you draw a sword as part of an attack. When an object requires your action for its use, you take the Use an Object action. This action is also useful when you want to interact with more than one object on your turn.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"uporabiti predmet\"\n      }\n    ]\n  },\n  {\n    \"value\": \"vulnerability\",\n    \"normalized\": \"vulnerability\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"občutljivost\",\n        \"alternatives\": [\n          \"ranljivost\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"walking speed\",\n    \"normalized\": \"walking speed\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"hitrost peš\",\n        \"alternatives\": [\n          \"hitrost hoje\",\n          \"hitrost po kopnem\"\n        ]\n      }\n    ]\n  },\n  {\n    \"value\": \"weapon\",\n    \"normalized\": \"weapon\",\n    \"description\": \"\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"orožje\"\n      }\n    ]\n  },\n  {\n    \"value\": \"wisdom\",\n    \"normalized\": \"wisdom\",\n    \"description\": \"Wisdom reflects how attuned you are to the world around you and represents perceptiveness and intuition.\",\n    \"translations\": [\n      {\n        \"language\": \"sl\",\n        \"value\": \"modrost\"\n      }\n    ]\n  }\n]","const isSurrogatePair = (codePoint: number) => codePoint > 0xffff;\n\nconst createInclusiveRange = (min: number, max: number) => (x: number) =>\n  min <= x && x <= max;\n\n// compiled from the following sources:\n// - https://en.wikipedia.org/wiki/Combining_character\n// - https://en.wikipedia.org/wiki/Spacing_Modifier_Letters\nconst combiningMarkRanges: [number, number][] = [\n  [0x02b0, 0x02ff],\n  [0x02de, 0x02de],\n  [0x02e0, 0x02e9],\n  [0x02df, 0x02df],\n  [0x02ea, 0x02ff],\n  [0x0300, 0x036f],\n  [0x1ab0, 0x1aff],\n  [0x1dc0, 0x1dff],\n  [0x20d0, 0x20ff],\n  [0xfe20, 0xfe2f],\n  [0x0300, 0x036f],\n  [0x032a, 0x032a],\n  [0x0346, 0x034f],\n  [0x035c, 0x036f],\n  [0x1ab0, 0x1abe],\n  [0x1dc0, 0x1dff],\n  [0x20d0, 0x20ff],\n  [0xfe20, 0xfe2f]\n];\n\nconst allMarks = combiningMarkRanges.map((pair) =>\n  createInclusiveRange(...pair)\n);\n\nconst isAccentedMark = (codePoint: number) =>\n  allMarks.some((isInRange) => isInRange(codePoint));\n\nexport const splitIntoUnicodeCharacters = (text: string = \"\"): string[] => {\n  const characters: string[] = [];\n  let codePointIndex = 0;\n  let codePoint: number;\n  while ((codePoint = text.codePointAt(codePointIndex)!) !== undefined) {\n    if (isSurrogatePair(codePoint)) {\n      characters.push(String.fromCodePoint(codePoint));\n      codePointIndex += 2;\n    } else {\n      characters.push(String.fromCodePoint(codePoint));\n      codePointIndex += 1;\n    }\n    while (\n      (codePoint = text.codePointAt(codePointIndex)!) !== undefined &&\n      isAccentedMark(codePoint)\n    ) {\n      characters[characters.length - 1] += String.fromCodePoint(codePoint);\n      codePointIndex += 1;\n    }\n  }\n  return characters;\n};\n\nexport const normalizeCharacters = (characters: string[]): string[] =>\n  characters.map((char) =>\n    isSurrogatePair(char.codePointAt(0)!)\n      ? char\n      : char.toLocaleLowerCase().normalize(\"NFKD\")[0]\n  );\n\nexport const makeSearchable = (str: string) =>\n  normalizeCharacters(splitIntoUnicodeCharacters(str)).join(\"\");\n","import { Component, For, Show } from \"solid-js\";\nimport dictionary from \"../../../dist/dictionary.json\";\nimport { DictionaryEntry } from \"../../dictionary/interfaces\";\nimport { makeSearchable } from \"../../dictionary/unicode\";\nimport { Language } from \"../../schemas/languages\";\nimport { slugify } from \"../utilities/strings\";\n\ninterface Props {\n  searchTerm: string;\n  language: Language;\n}\n\nconst List: Component<Props> = (props) => {\n  const matches = () => {\n    const needle = makeSearchable(props.searchTerm.trim().toLocaleLowerCase());\n    return needle\n      ? dictionary.filter((entry) => entry.normalized.includes(needle))\n      : dictionary;\n  };\n\n  return (\n    <ul>\n      <For each={matches()}>\n        {(match) => {\n          const t = (\n            match.translations as DictionaryEntry[\"translations\"]\n          ).find((t) => t.language == props.language);\n\n          if (!t) return null;\n\n          const id = slugify(match.value);\n\n          return (\n            <li>\n              <a href={`#${id}`}>\n                <dfn id={id}>{match.value}</dfn>\n              </a>\n              : <strong>{t.value}</strong>\n              <Show when={t.alternatives!?.length > 0}>\n                {\" \"}\n                <em>({t.alternatives!.join(\", \")})</em>\n              </Show>\n              <p>{match.description}</p>\n            </li>\n          );\n        }}\n      </For>\n    </ul>\n  );\n};\n\nexport default List;\n","export const slugify = (source: string) =>\n  encodeURIComponent(source.replace(/\\s/g, \"-\"));\n","import { Component, createSignal } from \"solid-js\";\n\ninterface Props {\n  setSearchTerm: (text: string) => void;\n}\n\nconst Search: Component<Props> = (props) => {\n  return (\n    <input\n      type=\"search\"\n      onInput={(ev) =>\n        props.setSearchTerm((ev.target as HTMLInputElement).value)\n      }\n    />\n  );\n};\n\nexport default Search;\n","import { Component, createSignal } from \"solid-js\";\nimport { Language } from \"../../schemas/languages\";\nimport LanguageSelector from \"./language\";\nimport List from \"./list\";\nimport Search from \"./search\";\n\nconst App: Component = () => {\n  const [searchTerm, setSearchTerm] = createSignal(\"\");\n  const [language, setLanguage] = createSignal<Language>(\"sl\");\n\n  return (\n    <>\n      <h1>Backpacker's Guide to DnD</h1>\n      <LanguageSelector selected={language()} setLanguage={setLanguage} />\n      <Search setSearchTerm={setSearchTerm} />\n      <List searchTerm={searchTerm()} language={language()} />\n    </>\n  );\n};\n\nexport default App;\n","import { render } from \"solid-js/web\";\nimport App from \"./components/app\";\n\nrender(() => <App />, document.getElementById(\"app\")!);\n"],"names":["$10052005344ab7d5$export$2cb4986bed338027","$10052005344ab7d5$var$setHydrateContext","context","$10052005344ab7d5$export$34b67c27f2ca7498","a","b","$10052005344ab7d5$export$17a675b7c02a7b1d","Symbol","$10052005344ab7d5$var$signalOptions","equals","$10052005344ab7d5$var$ERROR","$10052005344ab7d5$var$runEffects","$10052005344ab7d5$var$runQueue","$10052005344ab7d5$var$NOTPENDING","$10052005344ab7d5$var$UNOWNED","owned","cleanups","owner","$10052005344ab7d5$var$transPending","$10052005344ab7d5$var$setTransPending","$10052005344ab7d5$export$c1e1e1ecbbe76a5","$10052005344ab7d5$var$Owner","$10052005344ab7d5$var$SuspenseContext","$10052005344ab7d5$var$Transition","$10052005344ab7d5$var$Scheduler","$10052005344ab7d5$var$ExternalSourceFactory","$10052005344ab7d5$var$Listener","$10052005344ab7d5$var$Pending","$10052005344ab7d5$var$Updates","$10052005344ab7d5$var$Effects","$10052005344ab7d5$var$ExecCount","$10052005344ab7d5$export$882461b6382ed46c","fn","detachedOwner","listener","root","length","$10052005344ab7d5$var$runUpdates","$10052005344ab7d5$var$cleanNode","value1","options","Object","assign","s","value","observers","observerSlots","pending","comparator","undefined","$10052005344ab7d5$var$readSignal","bind","running","sources","has","tValue","$10052005344ab7d5$var$writeSignal","$10052005344ab7d5$export$234a23cdc77e6a3d","c","$10052005344ab7d5$var$createComputation","push","$10052005344ab7d5$var$updateComputation","$10052005344ab7d5$export$314dade334ae905d","$10052005344ab7d5$export$c0c6c8b9c16bf6aa","tState","$10052005344ab7d5$export$712ea50be43a7858","result","q","i","data","$10052005344ab7d5$export$363ebc4b78b8f807","$10052005344ab7d5$export$b36e5eaa3e8c43ab","$10052005344ab7d5$export$7568632d0d33d16d","done","l","o","Promise","resolve","then","t","Set","effects","promises","disposed","queue","res","$10052005344ab7d5$export$fd42f52fd3ae1109","defaultValue","id","Provider","$10052005344ab7d5$var$createProvider","$10052005344ab7d5$export$bacb5cc5a11aef16","children1","$10052005344ab7d5$var$resolveChildren","runningTransition","this","state","updates","$10052005344ab7d5$var$lookUpstream","sSlot","sourceSlots","node","isComp","TransitionRunning","add","pure","$10052005344ab7d5$var$markDownstream","Error","time","$10052005344ab7d5$var$runComputation","queueMicrotask","nextValue","err","$10052005344ab7d5$var$handleError","updatedAt","init","tOwned","track","trigger","ordinary","dispose","triggerInTransition","inTransition","x","$10052005344ab7d5$var$runTop","suspense","inFallback","ancestors","top","prev","wait","item","tasks","delete","size","apply","$10052005344ab7d5$var$scheduleQueue","forEach","e","v","len","$10052005344ab7d5$var$completeUpdates","ignore","source","pop","index","obs","n","$10052005344ab7d5$var$reset","fns","$10052005344ab7d5$var$lookup","f","key","children2","Array","isArray","results","props","children","$10052005344ab7d5$var$FALLBACK","$10052005344ab7d5$var$dispose","d","$10052005344ab7d5$var$hydrationEnabled","$10052005344ab7d5$export$60e54eaca7e7fb38","Comp","count","r","$10052005344ab7d5$export$bdf530073099ce9f","fallback","list","mapFn","items","mapped","disposers","indexes","j","newItems","newIndices","newIndicesNext","temp","tempdisposers","tempIndexes","start","end","newEnd","newLen","disposer","mapper","Math","min","Map","get","set","slice","$10052005344ab7d5$export$4c9116dcf1374231","each","$10052005344ab7d5$export$f6a3d19be20f5819","strictEqual","condition","when","child","$a4861d4a989eb6e6$export$b3890eb0ae9dca99","code","element","document","$a4861d4a989eb6e6$export$21a5ca8aa77d35ff","firstChild","textContent","$a4861d4a989eb6e6$export$ce69bd05624d0c48","html","check","isSVG","createElement","innerHTML","content","$a4861d4a989eb6e6$export$ad0f7f87f67e17d6","eventNames","window","name","addEventListener","$a4861d4a989eb6e6$var$eventHandler","$a4861d4a989eb6e6$export$9fec4d97f1922e0b","removeAttribute","setAttribute","parent","accessor","marker","initial","$a4861d4a989eb6e6$var$insertExpression","current","type","composedPath","target","defineProperty","configurable","registry","querySelectorAll","elem","remove","handler","disabled","cancelBubble","host","Node","parentNode","unwrapArray","childNodes","multi","toString","nodeType","createTextNode","$a4861d4a989eb6e6$var$cleanChildren","array","$a4861d4a989eb6e6$var$normalizeIncomingArray","$a4861d4a989eb6e6$var$appendNodes","bLength","aEnd","bEnd","aStart","bStart","after","nextSibling","map","insertBefore","sequence","replaceChild","$a4861d4a989eb6e6$var$reconcileArrays","appendChild","normalized","unwrap","dynamic","replacement","inserted","el","isParent","$4180ecd539820a1c$export$2e2bcd8739ae039","_el$","$4180ecd539820a1c$var$_tmpl$","cloneNode","ev","setLanguage","module","JSON","parse","isSurrogatePair","codePoint","allMarks","pair","max","createInclusiveRange","isAccentedMark","some","isInRange","makeSearchable","str","normalizeCharacters","characters","text","codePointIndex","codePointAt","String","fromCodePoint","splitIntoUnicodeCharacters","char","toLocaleLowerCase","normalize","join","$8bd8583eca864c8d$export$2e2bcd8739ae039","$8bd8583eca864c8d$var$_tmpl$","needle","searchTerm","trim","dictionary","filter","entry","includes","matches","match","translations","find","language","encodeURIComponent","replace","_el$2","$8bd8583eca864c8d$var$_tmpl$3","_el$3","_el$4","_el$6","_el$11","alternatives","_el$7","$8bd8583eca864c8d$var$_tmpl$2","_el$10","description","$e48931afff769336$export$2e2bcd8739ae039","$e48931afff769336$var$_tmpl$","$$input","setSearchTerm","$9146e17c5706b4fb$export$2e2bcd8739ae039","createSignal","$9146e17c5706b4fb$var$_tmpl$","selected","render","getElementById"],"version":3,"file":"index.c9ec3a94.js.map"}